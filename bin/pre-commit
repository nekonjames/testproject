#!/usr/bin/env bash
# Automatic usage by installing symbolic link:
# ln -sf ../../bin/pre-commit .git/hooks/pre-commit

# Enable TTY, so fastest runs on a single line and looks cooler
exec < /dev/tty

if [[ -z `docker ps -q --no-trunc | grep $(docker-compose ps -q apache2)` ]]; then
    echo -e "\e[41m COMMIT FAILED: Docker-compose is not running! \e[0m";
    exit 1
fi

# Install phpunit synchronously to avoid problems.
docker-compose exec php bin/phpunit install

docker-compose exec -T php bin/console cache:warmup --env=prod
if [[ $? != "0" ]]
then
    echo -e "\e[41m COMMIT FAILED: Cannot warm cache for env=prod! \e[0m":
    exit 1
fi

# see which files you wanted to commit, fix code style and re-add
FILES=` git status --porcelain | grep -e '^[AM]\(.*\).php$' | cut -c 3- | tr '\n' ' '`
if [[ $FILES ]]
then
    FILES_NO_APPLICATION=`echo ${FILES} | sed "s/api\///g"`
    docker-compose exec -T php vendor/bin/php-cs-fixer fix --config=.php_cs
    git add ${FILES}
fi

# remove outdated code coverage files
rm -f cov/fastest/*.cov

# Run Test. If this ever takes too long, consider commenting functional Test
#docker-compose exec -T php bin/phpunit tests --coverage-text=cov/merge/test.txt --coverage-html=public/test.html &
docker-compose exec php bash -c "find tests/ -name \"*Test.php\" | ./vendor/liuggio/fastest/fastest \"bin/phpunit {} --coverage-php cov/fastest/{n}.cov\""
if [[ $? != "0" ]]
then
    echo -e "\e[41m COMMIT FAILED: You have test errors! \e[0m":
    exit 1
fi

# merge code coverage
docker-compose exec php bin/phpcov merge cov/fastest/ --text --html public/test.html | head -n14 | tail -n6
echo "Full HTML coverage at http://0.0.0.0/test.html/index.html"

OK=`docker-compose exec -T php head -n50 public/test.html/index.html | grep "100.00%"`

if [[ ${OK} = "" ]]
then
    echo -e "\e[41m COMMIT FAILED: Code coverage not 100%! \e[0m":
    exit 1
fi

echo ""
